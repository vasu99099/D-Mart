import twilio from "twilio";

/**
 * The function sends a One Time Password (OTP) via SMS using Twilio API and returns the generated OTP.
 * @param phoneNumber - The phone number to which the OTP (One Time Password) will be sent via SMS.
 * @returns The OTP (One Time Password) generated by the  function is being returned.
 */
async function sendSMSOTP(phoneNumber) {
  try {
    var accountSid = process.env.SMS_accountSid;
    var authToken = process.env.SMS_authToken;
    const client = twilio(accountSid, authToken);
    let OTP = generateOTP();
    // await client.messages.create({
    //   body: `${OTP} is the One Time Password (OTP) to log in to your DMart Ready account.Your OTP will expire in 2 minutes`,
    //   from: process.env.SMS_FROM,
    //   to: `+91${phoneNumber}`,
    // });

    return OTP;
  } catch (e) {
    console.log(e)
    throw new Error("Message sending failed");
  }
}
export async function sendSMS(phoneNumber, Body) {
  try {
    var accountSid = process.env.SMS_accountSid;
    var authToken = process.env.SMS_authToken;
    const client = twilio(accountSid, authToken);
    await client.messages.create({
      body: Body,
      from: process.env.SMS_FROM,
      to: `+91${phoneNumber}`,
    });

    return true;
  } catch (e) {
    throw new Error("Message sending failed");
  }
}

/**
 * The function generates a 4-digit OTP (One Time Password) using a string of numbers.
 * @returns the generated OTP (One-Time Password) as a string.
 */
function generateOTP() {
  var string = "123456789";
  var len = string.length;
  let OTP = "";
  for (var i = 0; i < 4; i++) {
    OTP += string[Math.floor(Math.random() * len)];
  }
  console.log(OTP);
  return OTP;
}

export default sendSMSOTP;
